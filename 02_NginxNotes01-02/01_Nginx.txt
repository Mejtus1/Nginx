NGINX

- in developer console in NETWORK tab we can see our browser interacting with nginx server which in this case serves as load balancer for web app AIRBNB 

source: 
https://www.airbnb.ae 

quic-version: 0x00000001
server: nginx                                                          <---------- nginx load balancing server for Airbnb 
server-timing: cdn-cache; desc=MISS, edge; dur=204, origin; dur=85

- we are going to be working with nginx web proxy = 

- it is good practice to create nginx folder to which is nginx extracted in plain C:\ 
Directory: C:\
d-----         5/30/2025   1:27 AM                nginx

--------------------
terminal: 
PS C:\> cd .\nginx\
PS C:\> code . 
--------------------

inside nginx folder we have file structure: 

conf 
contrib
docs
html
logs 
temp 
nginx.exe 

- most of the time we are going to be working with nginx.conf 

terminal command when starting nginx server 

PS C:\nginx\nginx-1.28.0> .\nginx.exe (terminal is after that just left blank - normal operation of nginx) 

---------------------------------------------------------------------------
upon successfully lounching the server there is basic NGINX html displayed: 

"Welcome to nginx!
If you see this page, the nginx web server is successfully installed and working. Further configuration is required.

For online documentation and support please refer to nginx.org.
Commercial support is available at nginx.com.

Thank you for using nginx."

------------------------------------
network request from developer tools 

Request URL:
http://localhost/
Request Method:
GET
Status Code:
304 Not Modified
Remote Address:
127.0.0.1:80
Referrer Policy:
strict-origin-when-cross-origin


----------------------------------------------------------------------------
NGINX terminology

inside .conf file we have key value pairs - DIRECTIVES 

BASE OF NGINX .conf file 

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {                                <---- context 
    worker_connections  1024;           <---- directives for this specific context
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

